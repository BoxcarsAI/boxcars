---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/completions
    body:
      encoding: UTF-8
      string: '{"prompt":["Given an input question, first create a syntactically correct
        Rails Active Record code to run,\nthen look at the results of the code and
        return the answer. Unless the user specifies\nin her question a specific number
        of examples she wishes to obtain, limit your code\nto at most 5 results.\n\nNever
        query for all the columns from a specific model, only ask for a the few relevant
        attributes given the question.\n\nPay attention to use only the attribute
        names that you can see in the model description. Be careful to not query for
        attributes that do not exist.\nAlso, pay attention to which attribute is in
        which model.\n\nUse the following format:\nQuestion: \"Question here\"\nARCode:
        \"Active Record code to run\"\nARChanges: \"Active Record code to compute
        the number of records going to change\" - Only add this line if the ARCode
        on the line before will make data changes\nAnswer: \"Final answer here\"\n\nOnly
        use the following Active Record models:\n[Comment(id: integer, content: text,
        user_id: integer, ticket_id: integer, created_at: datetime, updated_at: datetime),
        Ticket(id: integer, title: string, user_id: integer, status: integer, body:
        text, created_at: datetime, updated_at: datetime), User(id: integer, name:
        string, created_at: datetime, updated_at: datetime)]\n\nQuestion: Move John''s
        open tickets to Sally\n"],"model":"gpt-3.5-turbo","temperature":0.7,"max_tokens":512,"stop":["Answer:"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 404
      message: Not Found
    headers:
      Date:
      - Thu, 02 Mar 2023 22:17:30 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '227'
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '86'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - 9ad02ffce86dc4cb61035874513ab8a4
    body:
      encoding: UTF-8
      string: |
        {
          "error": {
            "message": "This is a chat model and not supported in the v1/completions endpoint. Did you mean to use v1/chat/completions?",
            "type": "invalid_request_error",
            "param": "model",
            "code": null
          }
        }
  recorded_at: Thu, 02 Mar 2023 22:17:30 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"user","content":"Given an input question, first
        create a syntactically correct Rails Active Record code to run,\nthen look
        at the results of the code and return the answer. Unless the user specifies\nin
        her question a specific number of examples she wishes to obtain, limit your
        code\nto at most 5 results.\n\nNever query for all the columns from a specific
        model, only ask for a the few relevant attributes given the question.\n\nPay
        attention to use only the attribute names that you can see in the model description.
        Be careful to not query for attributes that do not exist.\nAlso, pay attention
        to which attribute is in which model.\n\nUse the following format:\nQuestion:
        \"Question here\"\nARCode: \"Active Record code to run\"\nARChanges: \"Active
        Record code to compute the number of records going to change\" - Only add
        this line if the ARCode on the line before will make data changes\nAnswer:
        \"Final answer here\"\n\nOnly use the following Active Record models:\n[Comment(id:
        integer, content: text, user_id: integer, ticket_id: integer, created_at:
        datetime, updated_at: datetime), Ticket(id: integer, title: string, user_id:
        integer, status: integer, body: text, created_at: datetime, updated_at: datetime),
        User(id: integer, name: string, created_at: datetime, updated_at: datetime)]\n\nQuestion:
        Move John''s open tickets to Sally\n"}],"model":"gpt-3.5-turbo","temperature":0.7,"max_tokens":512,"stop":["Answer:"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Wed, 08 Mar 2023 14:51:32 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '505'
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '2550'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Request-Id:
      - f01e71a93001d8039e56083a100bb0c5
    body:
      encoding: UTF-8
      string: '{"id":"chatcmpl-6rpQYeRdmBajYzw2GK7gpMMeNkYvi","object":"chat.completion","created":1678287090,"model":"gpt-3.5-turbo-0301","usage":{"prompt_tokens":294,"completion_tokens":65,"total_tokens":359},"choices":[{"message":{"role":"assistant","content":"ARCode:
        Ticket.where(user_id: User.find_by(name: ''John'').id, status: ''open'').update_all(user_id:
        User.find_by(name: ''Sally'').id)\nARChanges: Ticket.where(user_id: User.find_by(name:
        ''John'').id, status: ''open'').count\n"},"finish_reason":"stop","index":0}]}

        '
  recorded_at: Wed, 08 Mar 2023 14:51:32 GMT
recorded_with: VCR 6.1.0
