---
http_interactions:
- request:
    method: get
    uri: https://serpapi.com/search?api_key=<SERPAPI_API_KEY>&engine=google&output=json&q=What%20is%20the%20URL%20for%20ordinances%20Brazario%20County,%20TX?&source=ruby
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 13 Apr 2023 21:55:05 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 7b76f3752de6c7cd-DEN
      Cache-Control:
      - max-age=3600, public
      Etag:
      - W/"062b9750eb191da018eb3586694b6424"
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - MISS
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Serpapi-Search-Id:
      - 64387a361d64ea7cf855bfb0
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - a241b264-3efe-4fa0-892d-25888ff8fc5e
      X-Robots-Tag:
      - noindex, nofollow
      X-Runtime:
      - '2.789212'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 13 Apr 2023 21:55:05 GMT
recorded_with: VCR 6.1.0
