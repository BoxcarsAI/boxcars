---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"\u003ctraining\u003eAnswer
        the following questions as best you can. You have access to the following
        tools for actions:\n\u003cboxcars\u003e\n\u003ctool\u003e\n  \u003ctool name=\"Search\"
        version=\"0.1\" description=\"useful for when you need to answer questions
        about current events.You should ask targeted questions\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\n\u003ctool\u003e\n  \u003ctool
        name=\"Calculator\" version=\"0.1\" description=\"useful for when you need
        to answer questions about math\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\u003c/boxcars\u003eUse
        the following format making sure all open tags have closing tags:\n \u003cquestion\u003ethe
        input question you must answer\u003c/question\u003e\n \u003cthought\u003eyou
        should always think about what to do\u003c/thought\u003e\n \u003caction\u003ethe
        action to take, from this action list above\u003c/action\u003e\n \u003caction_input\u003einput
        to the action\u003c/action_input\u003e\n \u003cobservation\u003ethe result
        of the action\u003c/observation\u003e\n ... (this Thought/Action/Action Input/Observation
        sequence can repeat N times)\n \u003cthought\u003eI know the final answer\u003c/thought\u003e\n
        \u003cfinal_answer\u003ethe final answer to the original input question\u003c/final_answer\u003e\n--
        FORMAT END -\nYour answer should always have begin and end tags for each element.\nAlso
        make sure to specify a question for the action_input.\nFinally, if you can
        deduct the answer from the question or observation, you can jump to final_answer
        and give me the answer.\n\u003c/training\u003e"},{"role":"user","content":"\u003cquestion\u003eWhat
        is pi times the square root of the average high temperature in Austin TX in
        January?\u003c/question\u003e"},{"role":"assistant","content":"\u003cthought\u003e"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\n\u003cobservation\u003e"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 10 Jul 2023 05:55:16 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '1412'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89083'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 610ms
      X-Request-Id:
      - 75ab670af4794bd201ae75d378058b3b
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e468e7e889da706-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-7ae9awnHnNzrfo1VLxKbzOIJkpWrB",
          "object": "chat.completion",
          "created": 1688968514,
          "model": "gpt-3.5-turbo-0613",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "To answer this question, I need to find the average high temperature in Austin, TX in January and then multiply it by pi times the square root. I can use the Search tool to find the average high temperature in Austin, TX in January.</thought>\n<action>Search</action>\n<action_input>What is the average high temperature in Austin TX in January?</action_input>"
              },
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 381,
            "completion_tokens": 77,
            "total_tokens": 458
          }
        }
  recorded_at: Mon, 10 Jul 2023 05:55:16 GMT
- request:
    method: get
    uri: https://serpapi.com/search?api_key=<SERPAPI_API_KEY>&engine=google&output=json&q=What%20is%20the%20average%20high%20temperature%20in%20Austin%20TX%20in%20January?&source=ruby
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 10 Jul 2023 05:55:18 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 7e468e8b696b1b19-PHX
      Cf-Cache-Status:
      - EXPIRED
      Cache-Control:
      - max-age=3600, public
      Etag:
      - W/"61f914f62395dd6d94650891c39ab51d"
      Vary:
      - Accept-Encoding
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Serpapi-Search-Id:
      - 64ab9d441988e51ae828fe91
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 1dc27a28-9635-4f87-9358-6b0a1c8309d6
      X-Robots-Tag:
      - noindex, nofollow
      X-Runtime:
      - '1.820871'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 10 Jul 2023 05:55:18 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"\u003ctraining\u003eAnswer
        the following questions as best you can. You have access to the following
        tools for actions:\n\u003cboxcars\u003e\n\u003ctool\u003e\n  \u003ctool name=\"Search\"
        version=\"0.1\" description=\"useful for when you need to answer questions
        about current events.You should ask targeted questions\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\n\u003ctool\u003e\n  \u003ctool
        name=\"Calculator\" version=\"0.1\" description=\"useful for when you need
        to answer questions about math\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\u003c/boxcars\u003eUse
        the following format making sure all open tags have closing tags:\n \u003cquestion\u003ethe
        input question you must answer\u003c/question\u003e\n \u003cthought\u003eyou
        should always think about what to do\u003c/thought\u003e\n \u003caction\u003ethe
        action to take, from this action list above\u003c/action\u003e\n \u003caction_input\u003einput
        to the action\u003c/action_input\u003e\n \u003cobservation\u003ethe result
        of the action\u003c/observation\u003e\n ... (this Thought/Action/Action Input/Observation
        sequence can repeat N times)\n \u003cthought\u003eI know the final answer\u003c/thought\u003e\n
        \u003cfinal_answer\u003ethe final answer to the original input question\u003c/final_answer\u003e\n--
        FORMAT END -\nYour answer should always have begin and end tags for each element.\nAlso
        make sure to specify a question for the action_input.\nFinally, if you can
        deduct the answer from the question or observation, you can jump to final_answer
        and give me the answer.\n\u003c/training\u003e"},{"role":"user","content":"\u003cquestion\u003eWhat
        is pi times the square root of the average high temperature in Austin TX in
        January?\u003c/question\u003e"},{"role":"assistant","content":"\u003cthought\u003e
        To answer this question, I need to find the average high temperature in Austin,
        TX in January and then multiply it by pi times the square root. I can use
        the Search tool to find the average high temperature in Austin, TX in January.\u003c/thought\u003e\n\u003caction\u003eSearch\u003c/action\u003e\n\u003caction_input\u003eWhat
        is the average high temperature in Austin TX in January?\u003c/action_input\u003e\n\u003cobservation\u003e{:snippet=\u003e\"January
        Weather in Austin Texas, United States. Daily high temperatures increase by
        2°F, from 62°F to 64°F, rarely falling below 45°F or exceeding 76° ...\",
        :url=\u003e\"https://weatherspark.com/m/8004/1/Average-Weather-in-January-in-Austin-Texas-United-States\"}\u003c/observation\u003e\n\u003cthought\u003e"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\n\u003cobservation\u003e"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 10 Jul 2023 05:55:20 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '1352'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88917'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 722ms
      X-Request-Id:
      - eeb296a2a7ddcf10df67ea540de60f9e
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e468e989baea708-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJpZCI6ICJjaGF0Y21wbC03YWU5ZUdkelVYOXRKRFZmVGZ6UjExSVZoYnJQVSIsCiAgIm9iamVjdCI6ICJjaGF0LmNvbXBsZXRpb24iLAogICJjcmVhdGVkIjogMTY4ODk2ODUxOCwKICAibW9kZWwiOiAiZ3B0LTMuNS10dXJiby0wNjEzIiwKICAiY2hvaWNlcyI6IFsKICAgIHsKICAgICAgImluZGV4IjogMCwKICAgICAgIm1lc3NhZ2UiOiB7CiAgICAgICAgInJvbGUiOiAiYXNzaXN0YW50IiwKICAgICAgICAiY29udGVudCI6ICJUaGUgYXZlcmFnZSBoaWdoIHRlbXBlcmF0dXJlIGluIEF1c3RpbiwgVFggaW4gSmFudWFyeSBpcyA2NMKwRi4gTm93IEkgY2FuIGNhbGN1bGF0ZSBwaSB0aW1lcyB0aGUgc3F1YXJlIHJvb3Qgb2YgNjQuPC90aG91Z2h0PlxuPGFjdGlvbj5DYWxjdWxhdG9yPC9hY3Rpb24+XG48YWN0aW9uX2lucHV0PnBpICogc3FydCg2NCk8L2FjdGlvbl9pbnB1dD4iCiAgICAgIH0sCiAgICAgICJmaW5pc2hfcmVhc29uIjogInN0b3AiCiAgICB9CiAgXSwKICAidXNhZ2UiOiB7CiAgICAicHJvbXB0X3Rva2VucyI6IDU0MiwKICAgICJjb21wbGV0aW9uX3Rva2VucyI6IDUwLAogICAgInRvdGFsX3Rva2VucyI6IDU5MgogIH0KfQo=
  recorded_at: Mon, 10 Jul 2023 05:55:20 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"You can do basic math, but
        for any hard calculations that a human could not do in their head, use the
        following approach instead. Return code written in the Ruby programming language
        that prints the results to the console. If anyone gives you a hard math problem,
        just use the following format and we’ll take care of the rest:\n${{Question
        with hard calculation.}}\nreply only with the following format:\n```ruby\n${{only
        Ruby code that prints the answer}}\n```\n```output\n${{Output of your code}}\n```\n\nOtherwise,
        you should use this simpler format:\n${{Question without hard calculation}}\nAnswer:
        ${{Answer}}\n\nDo not give an explanation of the answer and make sure your
        answer starts with either ''Answer:'' or ''```ruby''."},{"role":"system","content":"here
        is a hard example:\nthe user asks: What is 37593 * 67?\nyour answer: ```ruby\nputs(37593
        * 67)\n```\n```output\n2518731\n```\nAnswer: 2518731"},{"role":"system","content":"basic
        example:\nuser asks: What is 2518731 + 0?\nyou answer: Answer: 2518731"},{"role":"system","content":"Begin."},{"role":"user","content":"pi
        * sqrt(64)"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["```output"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 10 Jul 2023 05:55:21 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '553'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89245'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 502ms
      X-Request-Id:
      - 0f254b83921a888070b29c4d149cee0d
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e468ea468cc1b14-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-7ae9gxOQDOc5880LLNIR3DaMuOvSp",
          "object": "chat.completion",
          "created": 1688968520,
          "model": "gpt-3.5-turbo-0613",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "```ruby\nputs Math::PI * Math.sqrt(64)\n```\n"
              },
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 260,
            "completion_tokens": 15,
            "total_tokens": 275
          }
        }
  recorded_at: Mon, 10 Jul 2023 05:55:21 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"\u003ctraining\u003eAnswer
        the following questions as best you can. You have access to the following
        tools for actions:\n\u003cboxcars\u003e\n\u003ctool\u003e\n  \u003ctool name=\"Search\"
        version=\"0.1\" description=\"useful for when you need to answer questions
        about current events.You should ask targeted questions\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\n\u003ctool\u003e\n  \u003ctool
        name=\"Calculator\" version=\"0.1\" description=\"useful for when you need
        to answer questions about math\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\u003c/boxcars\u003eUse
        the following format making sure all open tags have closing tags:\n \u003cquestion\u003ethe
        input question you must answer\u003c/question\u003e\n \u003cthought\u003eyou
        should always think about what to do\u003c/thought\u003e\n \u003caction\u003ethe
        action to take, from this action list above\u003c/action\u003e\n \u003caction_input\u003einput
        to the action\u003c/action_input\u003e\n \u003cobservation\u003ethe result
        of the action\u003c/observation\u003e\n ... (this Thought/Action/Action Input/Observation
        sequence can repeat N times)\n \u003cthought\u003eI know the final answer\u003c/thought\u003e\n
        \u003cfinal_answer\u003ethe final answer to the original input question\u003c/final_answer\u003e\n--
        FORMAT END -\nYour answer should always have begin and end tags for each element.\nAlso
        make sure to specify a question for the action_input.\nFinally, if you can
        deduct the answer from the question or observation, you can jump to final_answer
        and give me the answer.\n\u003c/training\u003e"},{"role":"user","content":"\u003cquestion\u003eWhat
        is pi times the square root of the average high temperature in Austin TX in
        January?\u003c/question\u003e"},{"role":"assistant","content":"\u003cthought\u003e
        To answer this question, I need to find the average high temperature in Austin,
        TX in January and then multiply it by pi times the square root. I can use
        the Search tool to find the average high temperature in Austin, TX in January.\u003c/thought\u003e\n\u003caction\u003eSearch\u003c/action\u003e\n\u003caction_input\u003eWhat
        is the average high temperature in Austin TX in January?\u003c/action_input\u003e\n\u003cobservation\u003e{:snippet=\u003e\"January
        Weather in Austin Texas, United States. Daily high temperatures increase by
        2°F, from 62°F to 64°F, rarely falling below 45°F or exceeding 76° ...\",
        :url=\u003e\"https://weatherspark.com/m/8004/1/Average-Weather-in-January-in-Austin-Texas-United-States\"}\u003c/observation\u003e\n\u003cthought\u003e
        The average high temperature in Austin, TX in January is 64°F. Now I can calculate
        pi times the square root of 64.\u003c/thought\u003e\n\u003caction\u003eCalculator\u003c/action\u003e\n\u003caction_input\u003epi
        * sqrt(64)\u003c/action_input\u003e\n\u003cobservation\u003e25.132741228718345\u003c/observation\u003e\n\u003cthought\u003e"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\n\u003cobservation\u003e"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 10 Jul 2023 05:55:22 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '696'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88854'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 764ms
      X-Request-Id:
      - 337dd1e12f8ff3cacb40ac1295730cb4
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e468eac9f40a6ea-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-7ae9i52NQPrye2drnxtjc3Rb97QGR",
          "object": "chat.completion",
          "created": 1688968522,
          "model": "gpt-3.5-turbo-0613",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "I know the final answer. The value of pi times the square root of the average high temperature in Austin, TX in January is approximately 25.13."
              },
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 608,
            "completion_tokens": 32,
            "total_tokens": 640
          }
        }
  recorded_at: Mon, 10 Jul 2023 05:55:22 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"\u003ctraining\u003eAnswer
        the following questions as best you can. You have access to the following
        tools for actions:\n\u003cboxcars\u003e\n\u003ctool\u003e\n  \u003ctool name=\"Search\"
        version=\"0.1\" description=\"useful for when you need to answer questions
        about current events.You should ask targeted questions\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\n\u003ctool\u003e\n  \u003ctool
        name=\"Calculator\" version=\"0.1\" description=\"useful for when you need
        to answer questions about math\"\u003e\n  \u003cparams\u003e\n    \u003cparam
        name=\"question\" data-type=\"String\" required=\"true\" description=\"question\"
        /\u003e\n  \u003c/params\u003e\n\u003c/tool\u003e\n\u003c/boxcars\u003eUse
        the following format making sure all open tags have closing tags:\n \u003cquestion\u003ethe
        input question you must answer\u003c/question\u003e\n \u003cthought\u003eyou
        should always think about what to do\u003c/thought\u003e\n \u003caction\u003ethe
        action to take, from this action list above\u003c/action\u003e\n \u003caction_input\u003einput
        to the action\u003c/action_input\u003e\n \u003cobservation\u003ethe result
        of the action\u003c/observation\u003e\n ... (this Thought/Action/Action Input/Observation
        sequence can repeat N times)\n \u003cthought\u003eI know the final answer\u003c/thought\u003e\n
        \u003cfinal_answer\u003ethe final answer to the original input question\u003c/final_answer\u003e\n--
        FORMAT END -\nYour answer should always have begin and end tags for each element.\nAlso
        make sure to specify a question for the action_input.\nFinally, if you can
        deduct the answer from the question or observation, you can jump to final_answer
        and give me the answer.\n\u003c/training\u003e"},{"role":"user","content":"\u003cquestion\u003eWhat
        is pi times the square root of the average high temperature in Austin TX in
        January?\u003c/question\u003e"},{"role":"assistant","content":"\u003cthought\u003e
        To answer this question, I need to find the average high temperature in Austin,
        TX in January and then multiply it by pi times the square root. I can use
        the Search tool to find the average high temperature in Austin, TX in January.\u003c/thought\u003e\n\u003caction\u003eSearch\u003c/action\u003e\n\u003caction_input\u003eWhat
        is the average high temperature in Austin TX in January?\u003c/action_input\u003e\n\u003cobservation\u003e{:snippet=\u003e\"January
        Weather in Austin Texas, United States. Daily high temperatures increase by
        2°F, from 62°F to 64°F, rarely falling below 45°F or exceeding 76° ...\",
        :url=\u003e\"https://weatherspark.com/m/8004/1/Average-Weather-in-January-in-Austin-Texas-United-States\"}\u003c/observation\u003e\n\u003cthought\u003e
        The average high temperature in Austin, TX in January is 64°F. Now I can calculate
        pi times the square root of 64.\u003c/thought\u003e\n\u003caction\u003eCalculator\u003c/action\u003e\n\u003caction_input\u003epi
        * sqrt(64)\u003c/action_input\u003e\n\u003cobservation\u003e25.132741228718345\u003c/observation\u003e\n\u003cthought\u003e
        I know the final answer. The value of pi times the square root of the average
        high temperature in Austin, TX in January is approximately 25.13.\n\u003cobservation\u003eI
        know the final answer. The value of pi times the square root of the average
        high temperature in Austin, TX in January is approximately 25.13.\u003c/observation\u003e\n\u003cthought\u003e"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\n\u003cobservation\u003e"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 10 Jul 2023 05:55:24 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '776'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88771'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 818ms
      X-Request-Id:
      - 6b7863bb5956716e3ee0a6dde9c990d7
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e468eb52cbda6f4-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-7ae9jpZvSujnHZY3PUh6FZW3rcMvp",
          "object": "chat.completion",
          "created": 1688968523,
          "model": "gpt-3.5-turbo-0613",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "<final_answer>The value of pi times the square root of the average high temperature in Austin, TX in January is approximately 25.13.</final_answer>"
              },
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 679,
            "completion_tokens": 32,
            "total_tokens": 711
          }
        }
  recorded_at: Mon, 10 Jul 2023 05:55:23 GMT
recorded_with: VCR 6.1.0
