---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"\u003ctraining\u003eAnswer
        the following questions as best you can. You have access to the following
        actions:\nSearch: useful for when you need to answer questions about current
        events.You should ask targeted questions\nCalculator: useful for when you
        need to answer questions about math\nUse the following format: \u003cformat\u003e\n
        \u003cquestion\u003ethe input question you must answer\u003c/question\u003e\n
        \u003cthought\u003eyou should always think about what to do\u003c/thought\u003e\n
        \u003caction\u003ethe action to take, from this action list\n  [Search, Calculator]\n  \u003caction_input\u003ean
        input question to the action\u003c/action_input\u003e\n  \u003cobservation\u003ethe
        result of the action\u003c/observation\u003e\n ... (this Thought/Action/Action
        Input/Observation sequence can repeat N times)\n \u003cthought\u003eI know
        the final answer\n  \u003cfinal_answer\u003ethe final answer to the original
        input question\u003c/final_answer\u003e\n \u003c/thought\u003e\n\u003c/format\u003e\nYour
        answer should always have begin and end tags for each element.\nAlso make
        sure to specify a question for the action_input.\nFinally, if you can deduct
        the answer from the question or observation, you can jump to final_answer
        and give me the answer.\n\u003c/training"},{"role":"user","content":"\u003cquestion\u003eWhat
        is pi times the square root of the average high temperature in Austin TX in
        January?\u003c/question\u003e"},{"role":"assistant","content":"\u003cthought\u003e"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\n\u003cobservation\u003e"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 03 Jul 2023 15:03:54 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '3542'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89181'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 546ms
      X-Request-Id:
      - 29fba8e89882ce3ff5b046872760710c
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e10047d4ef4a6eb-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-7YFNfBaQaknu5jMYcACoSUPAL8NuR",
          "object": "chat.completion",
          "created": 1688396631,
          "model": "gpt-3.5-turbo-0613",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "I need to find the average high temperature in Austin TX in January and then multiply it by pi times the square root of that temperature. I can use the Search action to find the average high temperature in Austin TX in January.</thought>\n<action>Search</action>\n<action_input>What is the average high temperature in Austin TX in January?</action_input>"
              },
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 275,
            "completion_tokens": 73,
            "total_tokens": 348
          }
        }
  recorded_at: Mon, 03 Jul 2023 15:03:54 GMT
- request:
    method: get
    uri: https://serpapi.com/search?api_key=<SERPAPI_API_KEY>&engine=google&output=json&q=What%20is%20the%20average%20high%20temperature%20in%20Austin%20TX%20in%20January?&source=ruby
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 03 Jul 2023 15:04:01 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 7e1004976e62a714-PHX
      Cf-Cache-Status:
      - MISS
      Cache-Control:
      - max-age=3600, public
      Etag:
      - W/"0fe4ea67de73abe83aec960a2e2291f1"
      Vary:
      - Accept-Encoding
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Serpapi-Search-Id:
      - 64a2e35a18ca860f152e0cc0
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 6a68630b-4ae6-4a9f-9fbd-32e97cb8ec8d
      X-Robots-Tag:
      - noindex, nofollow
      X-Runtime:
      - '6.691997'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 03 Jul 2023 15:04:01 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"\u003ctraining\u003eAnswer
        the following questions as best you can. You have access to the following
        actions:\nSearch: useful for when you need to answer questions about current
        events.You should ask targeted questions\nCalculator: useful for when you
        need to answer questions about math\nUse the following format: \u003cformat\u003e\n
        \u003cquestion\u003ethe input question you must answer\u003c/question\u003e\n
        \u003cthought\u003eyou should always think about what to do\u003c/thought\u003e\n
        \u003caction\u003ethe action to take, from this action list\n  [Search, Calculator]\n  \u003caction_input\u003ean
        input question to the action\u003c/action_input\u003e\n  \u003cobservation\u003ethe
        result of the action\u003c/observation\u003e\n ... (this Thought/Action/Action
        Input/Observation sequence can repeat N times)\n \u003cthought\u003eI know
        the final answer\n  \u003cfinal_answer\u003ethe final answer to the original
        input question\u003c/final_answer\u003e\n \u003c/thought\u003e\n\u003c/format\u003e\nYour
        answer should always have begin and end tags for each element.\nAlso make
        sure to specify a question for the action_input.\nFinally, if you can deduct
        the answer from the question or observation, you can jump to final_answer
        and give me the answer.\n\u003c/training"},{"role":"user","content":"\u003cquestion\u003eWhat
        is pi times the square root of the average high temperature in Austin TX in
        January?\u003c/question\u003e"},{"role":"assistant","content":"\u003cthought\u003e
        I need to find the average high temperature in Austin TX in January and then
        multiply it by pi times the square root of that temperature. I can use the
        Search action to find the average high temperature in Austin TX in January.\u003c/thought\u003e\n\u003caction\u003eSearch\u003c/action\u003e\n\u003caction_input\u003eWhat
        is the average high temperature in Austin TX in January?\u003c/action_input\u003e\n\u003cobservation\u003e{:snippet=\u003e\"January
        Weather in Austin Texas, United States. Daily high temperatures increase by
        2°F, from 62°F to 64°F, rarely falling below 45°F or exceeding 76° ...\",
        :url=\u003e\"https://weatherspark.com/m/8004/1/Average-Weather-in-January-in-Austin-Texas-United-States\"}\n\u003cthought\u003e"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\n\u003cobservation\u003e"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 03 Jul 2023 15:04:05 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '3687'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89017'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 654ms
      X-Request-Id:
      - bc5a6d864301676f47653421d6510b56
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e1004c33956a714-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        ewogICJpZCI6ICJjaGF0Y21wbC03WUZOcXR3OG5WdTJqSXcwZ1dEam1SQTdIbVRkRiIsCiAgIm9iamVjdCI6ICJjaGF0LmNvbXBsZXRpb24iLAogICJjcmVhdGVkIjogMTY4ODM5NjY0MiwKICAibW9kZWwiOiAiZ3B0LTMuNS10dXJiby0wNjEzIiwKICAiY2hvaWNlcyI6IFsKICAgIHsKICAgICAgImluZGV4IjogMCwKICAgICAgIm1lc3NhZ2UiOiB7CiAgICAgICAgInJvbGUiOiAiYXNzaXN0YW50IiwKICAgICAgICAiY29udGVudCI6ICJUaGUgYXZlcmFnZSBoaWdoIHRlbXBlcmF0dXJlIGluIEF1c3RpbiBUWCBpbiBKYW51YXJ5IGlzIDY0wrBGLiBOb3cgSSBjYW4gY2FsY3VsYXRlIHBpIHRpbWVzIHRoZSBzcXVhcmUgcm9vdCBvZiA2NMKwRi48L3Rob3VnaHQ+XG48YWN0aW9uPkNhbGN1bGF0b3I8L2FjdGlvbj5cbjxhY3Rpb25faW5wdXQ+cGkgKiBzcXJ0KDY0KTwvYWN0aW9uX2lucHV0PiIKICAgICAgfSwKICAgICAgImZpbmlzaF9yZWFzb24iOiAic3RvcCIKICAgIH0KICBdLAogICJ1c2FnZSI6IHsKICAgICJwcm9tcHRfdG9rZW5zIjogNDI5LAogICAgImNvbXBsZXRpb25fdG9rZW5zIjogNTAsCiAgICAidG90YWxfdG9rZW5zIjogNDc5CiAgfQp9Cg==
  recorded_at: Mon, 03 Jul 2023 15:04:05 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"You can do basic math, but
        for any hard calculations that a human could not do in their head, use the
        following approach instead. Return code written in the Ruby programming language
        that prints the results to the console. If anyone gives you a hard math problem,
        just use the following format and we’ll take care of the rest:\n${{Question
        with hard calculation.}}\nreply only with the following format:\n```ruby\n${{only
        Ruby code that prints the answer}}\n```\n```output\n${{Output of your code}}\n```\n\nOtherwise,
        you should use this simpler format:\n${{Question without hard calculation}}\nAnswer:
        ${{Answer}}\n\nDo not give an explanation of the answer and make sure your
        answer starts with either ''Answer:'' or ''```ruby''."},{"role":"system","content":"here
        is a hard example:\nthe user asks: What is 37593 * 67?\nyour answer: ```ruby\nputs(37593
        * 67)\n```\n```output\n2518731\n```\nAnswer: 2518731"},{"role":"system","content":"basic
        example:\nuser asks: What is 2518731 + 0?\nyou answer: Answer: 2518731"},{"role":"system","content":"Begin."},{"role":"user","content":"pi
        * sqrt(64)"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["```output"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 03 Jul 2023 15:04:07 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '1379'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '89245'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 502ms
      X-Request-Id:
      - 5b64ce8a34f61723379bbb5d02a88e9c
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e1004ddb9bc1afb-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-7YFNvjoSzdaPCwgTaW3tlcj8WMDuR",
          "object": "chat.completion",
          "created": 1688396647,
          "model": "gpt-3.5-turbo-0613",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "```ruby\nputs Math::PI * Math.sqrt(64)\n```\n"
              },
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 260,
            "completion_tokens": 15,
            "total_tokens": 275
          }
        }
  recorded_at: Mon, 03 Jul 2023 15:04:07 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"\u003ctraining\u003eAnswer
        the following questions as best you can. You have access to the following
        actions:\nSearch: useful for when you need to answer questions about current
        events.You should ask targeted questions\nCalculator: useful for when you
        need to answer questions about math\nUse the following format: \u003cformat\u003e\n
        \u003cquestion\u003ethe input question you must answer\u003c/question\u003e\n
        \u003cthought\u003eyou should always think about what to do\u003c/thought\u003e\n
        \u003caction\u003ethe action to take, from this action list\n  [Search, Calculator]\n  \u003caction_input\u003ean
        input question to the action\u003c/action_input\u003e\n  \u003cobservation\u003ethe
        result of the action\u003c/observation\u003e\n ... (this Thought/Action/Action
        Input/Observation sequence can repeat N times)\n \u003cthought\u003eI know
        the final answer\n  \u003cfinal_answer\u003ethe final answer to the original
        input question\u003c/final_answer\u003e\n \u003c/thought\u003e\n\u003c/format\u003e\nYour
        answer should always have begin and end tags for each element.\nAlso make
        sure to specify a question for the action_input.\nFinally, if you can deduct
        the answer from the question or observation, you can jump to final_answer
        and give me the answer.\n\u003c/training"},{"role":"user","content":"\u003cquestion\u003eWhat
        is pi times the square root of the average high temperature in Austin TX in
        January?\u003c/question\u003e"},{"role":"assistant","content":"\u003cthought\u003e
        I need to find the average high temperature in Austin TX in January and then
        multiply it by pi times the square root of that temperature. I can use the
        Search action to find the average high temperature in Austin TX in January.\u003c/thought\u003e\n\u003caction\u003eSearch\u003c/action\u003e\n\u003caction_input\u003eWhat
        is the average high temperature in Austin TX in January?\u003c/action_input\u003e\n\u003cobservation\u003e{:snippet=\u003e\"January
        Weather in Austin Texas, United States. Daily high temperatures increase by
        2°F, from 62°F to 64°F, rarely falling below 45°F or exceeding 76° ...\",
        :url=\u003e\"https://weatherspark.com/m/8004/1/Average-Weather-in-January-in-Austin-Texas-United-States\"}\n\u003cthought\u003e
        The average high temperature in Austin TX in January is 64°F. Now I can calculate
        pi times the square root of 64°F.\u003c/thought\u003e\n\u003caction\u003eCalculator\u003c/action\u003e\n\u003caction_input\u003epi
        * sqrt(64)\u003c/action_input\u003e\n\u003cobservation\u003e25.132741228718345\n\u003cthought\u003e"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\n\u003cobservation\u003e"]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 03 Jul 2023 15:04:10 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0613
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '1998'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Limit-Tokens:
      - '90000'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Remaining-Tokens:
      - '88957'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Ratelimit-Reset-Tokens:
      - 694ms
      X-Request-Id:
      - f55f34cf43ebdd83c35e6fb4371090f3
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7e1004eb5824a709-PHX
      Alt-Svc:
      - h3=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: |
        {
          "id": "chatcmpl-7YFNxiGUQ9CRoqSRROrvO6ARHRZeS",
          "object": "chat.completion",
          "created": 1688396649,
          "model": "gpt-3.5-turbo-0613",
          "choices": [
            {
              "index": 0,
              "message": {
                "role": "assistant",
                "content": "I know the final answer.\n<final_answer>pi times the square root of the average high temperature in Austin TX in January is approximately 25.13</final_answer>"
              },
              "finish_reason": "stop"
            }
          ],
          "usage": {
            "prompt_tokens": 493,
            "completion_tokens": 35,
            "total_tokens": 528
          }
        }
  recorded_at: Mon, 03 Jul 2023 15:04:10 GMT
recorded_with: VCR 6.1.0
