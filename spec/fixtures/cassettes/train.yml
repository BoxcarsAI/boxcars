---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"Answer the following questions
        as best you can. You have access to the following actions:\nSearch: useful
        for when you need to answer questions about current events.You should ask
        targeted questions\nCalculator: useful for when you need to answer questions
        about math\nUse the following format:\nQuestion: the input question you must
        answer\nThought: you should always think about what to do\nAction: the action
        to take, should be one from this list: [Search, Calculator]\nAction Input:
        the input to the action\nObservation: the result of the action\n... (this
        Thought/Action/Action Input/Observation sequence can repeat N times)\nThought:
        I know the final answer\nFinal Answer: the final answer to the original input
        question\nNext Actions: Up to 3 logical suggested next questions for the user
        to ask after getting this answer.\nRemember to start a line with \"Final Answer:\"
        to give me the final answer.\nBegin!"},{"role":"user","content":"Question:
        how many days in a year?"},{"role":"assistant","content":"Thought: "}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\nObservation:
        "]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 20 Mar 2023 22:33:06 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '441'
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '4226'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Request-Id:
      - 3c105da1eef6d9202fa3e88dfa7892e9
    body:
      encoding: UTF-8
      string: '{"id":"chatcmpl-6wILmtdnOGjxzgbH1p9PCoJVv6JYx","object":"chat.completion","created":1679351582,"model":"gpt-3.5-turbo-0301","usage":{"prompt_tokens":218,"completion_tokens":34,"total_tokens":252},"choices":[{"message":{"role":"assistant","content":"This
        is a general knowledge question that can be easily answered with a quick search.
        \n\nAction: Search \n\nAction Input: \"how many days in a year\" \n"},"finish_reason":"stop","index":0}]}

        '
  recorded_at: Mon, 20 Mar 2023 22:33:06 GMT
- request:
    method: get
    uri: https://serpapi.com/search?api_key=<SERPAPI_API_KEY>&engine=google&output=json&q=how%20many%20days%20in%20a%20year&source=ruby
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 20 Mar 2023 22:33:07 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 7ab16a3aeb2da044-SLC
      Age:
      - '65'
      Cache-Control:
      - max-age=3600, public
      Etag:
      - W/"d69016b82c60e8fef4049d9c786be167"
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - HIT
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Serpapi-Search-Id:
      - 6418dee0797ac6b460a97546
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - addb7bcc-bf89-479e-a7fc-b7a2a19e3779
      X-Robots-Tag:
      - noindex, nofollow
      X-Runtime:
      - '1.433844'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Mon, 20 Mar 2023 22:33:06 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"Answer the following questions
        as best you can. You have access to the following actions:\nSearch: useful
        for when you need to answer questions about current events.You should ask
        targeted questions\nCalculator: useful for when you need to answer questions
        about math\nUse the following format:\nQuestion: the input question you must
        answer\nThought: you should always think about what to do\nAction: the action
        to take, should be one from this list: [Search, Calculator]\nAction Input:
        the input to the action\nObservation: the result of the action\n... (this
        Thought/Action/Action Input/Observation sequence can repeat N times)\nThought:
        I know the final answer\nFinal Answer: the final answer to the original input
        question\nNext Actions: Up to 3 logical suggested next questions for the user
        to ask after getting this answer.\nRemember to start a line with \"Final Answer:\"
        to give me the final answer.\nBegin!"},{"role":"user","content":"Question:
        how many days in a year?"},{"role":"assistant","content":"Thought:  This is
        a general knowledge question that can be easily answered with a quick search.
        \n\nAction: Search \n\nAction Input: \"how many days in a year\" \n\nObservation:
        365 days\nThought:"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\nObservation:
        "]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Mon, 20 Mar 2023 22:33:11 GMT
      Content-Type:
      - application/json
      Content-Length:
      - '465'
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '4223'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Request-Id:
      - ba87b0022a584590603cc4751aebedd9
    body:
      encoding: UTF-8
      string: '{"id":"chatcmpl-6wILr24DbShDPgBorPhflY2936rCH","object":"chat.completion","created":1679351587,"model":"gpt-3.5-turbo-0301","usage":{"prompt_tokens":260,"completion_tokens":52,"total_tokens":312},"choices":[{"message":{"role":"assistant","content":"I
        know the final answer. \n\nFinal Answer: 365 days \n\nNext Actions: \n1. How
        many days are in a leap year? \n2. How many hours are in a day? \n3. How many
        weeks are in a year?"},"finish_reason":"stop","index":0}]}

        '
  recorded_at: Mon, 20 Mar 2023 22:33:11 GMT
recorded_with: VCR 6.1.0
