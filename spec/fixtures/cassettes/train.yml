---
http_interactions:
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"Answer the following questions
        as best you can. You have access to the following actions:\nSearch: useful
        for when you need to answer questions about current events.You should ask
        targeted questions\nCalculator: useful for when you need to answer questions
        about math\nUse the following format:\nQuestion: the input question you must
        answer\nThought: you should always think about what to do\nAction: the action
        to take, should be one from this list: [Search, Calculator]\nAction Input:
        the input to the action\nObservation: the result of the action\n... (this
        Thought/Action/Action Input/Observation sequence can repeat N times)\nThought:
        I know the final answer\nFinal Answer: the final answer to the original input
        question\nNext Actions: Up to 3 logical suggested next questions for the user
        to ask after getting this answer.\nRemember to start a line with \"Final Answer:\"
        to give me the final answer.\nBegin!"},{"role":"user","content":"Question:
        how many days in a year?"},{"role":"assistant","content":"Thought: "}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\nObservation:
        "]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 30 Mar 2023 20:06:41 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '1294'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Request-Id:
      - f2c17c67877be091f882fadf906ea646
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7b02f977684327dc-SLC
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: '{"id":"chatcmpl-6zspcx7z3T7HeaabDpvvRV3gEiy68","object":"chat.completion","created":1680206800,"model":"gpt-3.5-turbo-0301","usage":{"prompt_tokens":219,"completion_tokens":33,"total_tokens":252},"choices":[{"message":{"role":"assistant","content":"This
        is a general knowledge question that can be easily answered with a quick search.
        \n\nAction: Search \n\nAction Input: \"how many days in a year\" \n"},"finish_reason":"stop","index":0}]}

        '
  recorded_at: Thu, 30 Mar 2023 20:06:41 GMT
- request:
    method: get
    uri: https://serpapi.com/search?api_key=<SERPAPI_API_KEY>&engine=google&output=json&q=how%20many%20days%20in%20a%20year&source=ruby
    body:
      encoding: US-ASCII
      string: ''
    headers:
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 30 Mar 2023 20:06:43 GMT
      Content-Type:
      - application/json; charset=utf-8
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Cf-Ray:
      - 7b02f980b8392806-SLC
      Cache-Control:
      - max-age=3600, public
      Etag:
      - W/"28885b005d1336161d7337db625342bd"
      Vary:
      - Accept-Encoding
      Cf-Cache-Status:
      - MISS
      Referrer-Policy:
      - strict-origin-when-cross-origin
      Serpapi-Search-Id:
      - 6425ebd2969c089ddb5fa8f6
      X-Content-Type-Options:
      - nosniff
      X-Download-Options:
      - noopen
      X-Frame-Options:
      - SAMEORIGIN
      X-Permitted-Cross-Domain-Policies:
      - none
      X-Request-Id:
      - 4051a451-297a-4f13-ba02-6e12242247fd
      X-Robots-Tag:
      - noindex, nofollow
      X-Runtime:
      - '0.869912'
      X-Xss-Protection:
      - 1; mode=block
      Server:
      - cloudflare
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: !binary |-
        
  recorded_at: Thu, 30 Mar 2023 20:06:43 GMT
- request:
    method: post
    uri: https://api.openai.com/v1/chat/completions
    body:
      encoding: UTF-8
      string: '{"messages":[{"role":"system","content":"Answer the following questions
        as best you can. You have access to the following actions:\nSearch: useful
        for when you need to answer questions about current events.You should ask
        targeted questions\nCalculator: useful for when you need to answer questions
        about math\nUse the following format:\nQuestion: the input question you must
        answer\nThought: you should always think about what to do\nAction: the action
        to take, should be one from this list: [Search, Calculator]\nAction Input:
        the input to the action\nObservation: the result of the action\n... (this
        Thought/Action/Action Input/Observation sequence can repeat N times)\nThought:
        I know the final answer\nFinal Answer: the final answer to the original input
        question\nNext Actions: Up to 3 logical suggested next questions for the user
        to ask after getting this answer.\nRemember to start a line with \"Final Answer:\"
        to give me the final answer.\nBegin!"},{"role":"user","content":"Question:
        how many days in a year?"},{"role":"assistant","content":"Thought:  This is
        a general knowledge question that can be easily answered with a quick search.
        \n\nAction: Search \n\nAction Input: \"how many days in a year\" \n\nObservation:
        Gregorian calendar year. One calendar common year has 365 days: · Julian year.
        Julian year is used for astronomical calculations (light year definition).\nThought:"}],"model":"gpt-3.5-turbo","temperature":0.2,"max_tokens":512,"stop":["\nObservation:
        "]}'
    headers:
      Content-Type:
      - application/json
      Authorization:
      - Bearer <openai_access_token>
      Accept-Encoding:
      - gzip;q=1.0,deflate;q=0.6,identity;q=0.3
      Accept:
      - "*/*"
      User-Agent:
      - Ruby
  response:
    status:
      code: 200
      message: OK
    headers:
      Date:
      - Thu, 30 Mar 2023 20:06:45 GMT
      Content-Type:
      - application/json
      Transfer-Encoding:
      - chunked
      Connection:
      - keep-alive
      Access-Control-Allow-Origin:
      - "*"
      Cache-Control:
      - no-cache, must-revalidate
      Openai-Model:
      - gpt-3.5-turbo-0301
      Openai-Organization:
      - user-ri9zw9ahumb1bo9vs73mudbi
      Openai-Processing-Ms:
      - '2496'
      Openai-Version:
      - '2020-10-01'
      Strict-Transport-Security:
      - max-age=15724800; includeSubDomains
      X-Ratelimit-Limit-Requests:
      - '3500'
      X-Ratelimit-Remaining-Requests:
      - '3499'
      X-Ratelimit-Reset-Requests:
      - 17ms
      X-Request-Id:
      - 73c5cab4c9f51bcc7260d98ffd7deca7
      Cf-Cache-Status:
      - DYNAMIC
      Server:
      - cloudflare
      Cf-Ray:
      - 7b02f988989ca074-SLC
      Alt-Svc:
      - h3=":443"; ma=86400, h3-29=":443"; ma=86400
    body:
      encoding: ASCII-8BIT
      string: '{"id":"chatcmpl-6zspfcKzL9NFbGrdAWfJ2DsyR9uhU","object":"chat.completion","created":1680206803,"model":"gpt-3.5-turbo-0301","usage":{"prompt_tokens":287,"completion_tokens":75,"total_tokens":362},"choices":[{"message":{"role":"assistant","content":"There
        are different types of years, but the Gregorian calendar year is the most
        commonly used. \n\nFinal Answer: There are 365 days in a Gregorian calendar
        year. \n\nNext Actions: \n1. How many days are in a leap year? \n2. How many
        days are in a lunar year? \n3. How many days are in a school year?"},"finish_reason":"stop","index":0}]}

        '
  recorded_at: Thu, 30 Mar 2023 20:06:45 GMT
recorded_with: VCR 6.1.0
